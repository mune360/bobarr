apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/bobarr-default: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: DEBUG_REDIS
              valueFrom:
                configMapKeyRef:
                  key: DEBUG_REDIS
                  name: env
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  key: ENV
                  name: env
            - name: JACKETT_AUTOMATIC_SEARCH_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: JACKETT_AUTOMATIC_SEARCH_TIMEOUT
                  name: env
            - name: JACKETT_MANUAL_SEARCH_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: JACKETT_MANUAL_SEARCH_TIMEOUT
                  name: env
            - name: LIBRARY_MOVIES_FOLDER_NAME
              valueFrom:
                configMapKeyRef:
                  key: LIBRARY_MOVIES_FOLDER_NAME
                  name: env
            - name: LIBRARY_TV_SHOWS_FOLDER_NAME
              valueFrom:
                configMapKeyRef:
                  key: LIBRARY_TV_SHOWS_FOLDER_NAME
                  name: env
            - name: PGID
              valueFrom:
                configMapKeyRef:
                  key: PGID
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
            - name: PUID
              valueFrom:
                configMapKeyRef:
                  key: PUID
                  name: env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: env
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: env
            - name: UMASK_SET
              valueFrom:
                configMapKeyRef:
                  key: UMASK_SET
                  name: env
          image: postgres:12-alpine
          name: bobarr-postgresql
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
status: {}
